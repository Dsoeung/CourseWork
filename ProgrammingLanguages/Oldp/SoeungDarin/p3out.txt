;; Dribble of #<IO TERMINAL-STREAM> started on 2019-11-21 23:15:50.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER #P"p3out.txt">
[22]> (load "~/HW6/P3lispS.lsp" :echo T :print T)
;; Loading file /home/iou957/HW6/P3lispS.lsp ...
;(defmacro +=(start add)
;(+= numericVariable incrementValue)
;> (setf x 1)
;1
;> (+= x 5)
;6
;

(defmacro += (start &optional (num 1))
  `(setf ,start (+ ,num ,start))
)
+=


;; iterate
;; Model after
;;(iterate controlVariable beginValueExpr endValueExpr incrExpr bodyexpr1 bodyexpr2 ... bodyexprN) 
;;we use rest to express the values bodyexpr1 bodyexpr2 ... bodyexprN
(defmacro iterate (controlVariable beginValueExpr endValueExpr incrExpr &rest bodyExpr1)
    (let ((iter(gensym))(end(gensym)) )
        `(do ((,iter ,incrExpr)(,end ,endValueExpr)(,controlVariable ,beginValueExpr(+= ,controlVariable ,iter)))
            ((> ,controlVariable ,end) T)
            ,@ bodyExpr1
        )
    )
)
ITERATE
;; Loaded file /home/iou957/HW6/P3lispS.lsp
T
[23]> (load "~/HW6/p3LispRun.txt" :echo T :print T)
;; Loading file /home/iou957/HW6/p3LispRun.txt ...
;;; p3LispRun.txt begins ...
;; test +=
(setf x 10 y 5)
5

(+= x 5)
15

(print x)
15 
15

(+= y x)
20

(print y)
20 
20



;; iterate
(iterate i 1 5 1
     (print (list 'one i) )
)
(ONE 1) 
(ONE 2) 
(ONE 3) 
(ONE 4) 
(ONE 5) 
T


(setf n 5)
5

  
(iterate i 1 n 1
     (print (list 'two i n))
     (+=  i 1)
)
(TWO 1 5) 
(TWO 3 5) 
(TWO 5 5) 
T


(setf n 5)
5


(iterate i 1 n 1
     (print (list 'three i n))
     (+= n 1)
)
(THREE 1 5) 
(THREE 2 6) 
(THREE 3 7) 
(THREE 4 8) 
(THREE 5 9) 
T


(setf n 5)
5

(setf inc 2)
2


(iterate i 1 n inc
     (print (list 'three i n inc))
     (+= inc 1)
)
(THREE 1 5 2) 
(THREE 3 5 3) 
(THREE 5 5 4) 
T


(setf n 5)
5

(setf inc 2)
2

(iterate i 1 (+ n 2) inc
     (print (list 'four i n inc))
     (+= n 1)
     (+= i 1)
     (+= inc 1)
)
(FOUR 1 5 2) 
(FOUR 4 6 3) 
(FOUR 7 7 4) 
T

;; Loaded file /home/iou957/HW6/p3LispRun.txt
T
[24]> (dribble)
;; Dribble of #<IO TERMINAL-STREAM> finished on 2019-11-21 23:16:26.
